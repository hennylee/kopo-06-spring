/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-08-24 11:07:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/kopo/kopo-06-spring/code/server-work/wtpwebapps/Mission-Spring/WEB-INF/lib/spring-webmvc-5.3.9.jar!/META-INF/spring-form.tld", Long.valueOf(1626212264000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.3.9.jar", Long.valueOf(1627865534535L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005fform_0026_005fonsubmit_005fname_005fmethod;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fform_005fform_0026_005fonsubmit_005fname_005fmethod = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fform_005fform_0026_005fonsubmit_005fname_005fmethod.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/resources/css/layout.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/resources/css/board.css\" />\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/js/myJS.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	/* \r\n");
      out.write("	forward했을때, 또는 sendRedirect했을때\r\n");
      out.write("	alert를 띄우는 방법(비추)\r\n");
      out.write("	\r\n");
      out.write("	*/\r\n");
      out.write("	\r\n");
      out.write("	if ('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\r\n");
      out.write("		alert('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\r\n");
      out.write("	\r\n");
      out.write("	/*\r\n");
      out.write("	window.onload = function(){\r\n");
      out.write("		if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != ''){\r\n");
      out.write("			alert('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\r\n");
      out.write("		}\r\n");
      out.write("	} \r\n");
      out.write("	*/\r\n");
      out.write("	\r\n");
      out.write("	$(function(){\r\n");
      out.write("		let cId = getCookie(\"cookieId\");\r\n");
      out.write("		\r\n");
      out.write("		if(cId){\r\n");
      out.write("			$('#id').val(cId);\r\n");
      out.write("			$('#rememberId').attr(\"checked\", true);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	// form validation\r\n");
      out.write("	function checkForm(){\r\n");
      out.write("		let f = document.loginForm\r\n");
      out.write("		let id = f.id\r\n");
      out.write("		let password = f.password\r\n");
      out.write("		let rememberId = f.rememberId\r\n");
      out.write("		\r\n");
      out.write("		if(isNull(id, '아이디를 입력하세요'))\r\n");
      out.write("			return false\r\n");
      out.write("		\r\n");
      out.write("		if(isNull(password, '패스워드를 입력하세요'))\r\n");
      out.write("			return false\r\n");
      out.write("		\r\n");
      out.write("		/*\r\n");
      out.write("		if(id.value == ''){\r\n");
      out.write("			alert('아이디를 입력하세요')\r\n");
      out.write("			id.focus()\r\n");
      out.write("			return false\r\n");
      out.write("		}\r\n");
      out.write("		*/\r\n");
      out.write("		\r\n");
      out.write("		/*\r\n");
      out.write("		if(password.value == ''){\r\n");
      out.write("			alert('패스워드를 입력하세요')\r\n");
      out.write("			password.focus()\r\n");
      out.write("			return false\r\n");
      out.write("		}\r\n");
      out.write("		*/\r\n");
      out.write("		\r\n");
      out.write("		// 아이디 저장 여부\r\n");
      out.write("		if(rememberId.checked){\r\n");
      out.write("			rememberId.value = true;\r\n");
      out.write("			setCookie(\"cookieId\", id.value, 7);\r\n");
      out.write("		}\r\n");
      out.write("		else{\r\n");
      out.write("			rememberId.value = false;\r\n");
      out.write("			deleteCookie(\"cookieId\");\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		return true\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 쿠키 저장\r\n");
      out.write("	function setCookie(cookieName, value, exdays){ \r\n");
      out.write("		let exdate = new Date(); \r\n");
      out.write("		exdate.setDate(exdate.getDate() + exdays); // 쿠키 저장 기간 \r\n");
      out.write("		let cookieValue = escape(value) + ((exdays==null) ? \"\" : \"; expires=\" + exdate.toGMTString()); \r\n");
      out.write("		document.cookie = cookieName + \"=\" + cookieValue; \r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 쿠키 얻기\r\n");
      out.write("	function getCookie(cookieName) { \r\n");
      out.write("		cookieName = cookieName + '='; \r\n");
      out.write("		let cookieData = document.cookie; \r\n");
      out.write("		let start = cookieData.indexOf(cookieName); \r\n");
      out.write("		let cookieValue = ''; \r\n");
      out.write("		if(start != -1) { \r\n");
      out.write("			start += cookieName.length; \r\n");
      out.write("			let end = cookieData.indexOf(';', start); \r\n");
      out.write("			if(end == -1)\r\n");
      out.write("				end = cookieData.length; \r\n");
      out.write("			cookieValue = cookieData.substring(start, end); \r\n");
      out.write("		} \r\n");
      out.write("		return unescape(cookieValue); \r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 쿠키 삭제\r\n");
      out.write("	function deleteCookie(cookieName) { \r\n");
      out.write("		let expireDate = new Date(); \r\n");
      out.write("		expireDate.setDate(expireDate.getDate() - 1); \r\n");
      out.write("		document.cookie = cookieName + \"= \" + \"; expires=\" + expireDate.toGMTString(); \r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("		<div align=\"center\">\r\n");
      out.write("			<hr>\r\n");
      out.write("			<h2>로그인</h2>\r\n");
      out.write("			<hr>\r\n");
      out.write("\r\n");
      out.write("			<br>\r\n");
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_form_005fform_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	<footer>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_form_005fform_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:form
    org.springframework.web.servlet.tags.form.FormTag _jspx_th_form_005fform_005f0 = (org.springframework.web.servlet.tags.form.FormTag) _005fjspx_005ftagPool_005fform_005fform_0026_005fonsubmit_005fname_005fmethod.get(org.springframework.web.servlet.tags.form.FormTag.class);
    boolean _jspx_th_form_005fform_005f0_reused = false;
    try {
      _jspx_th_form_005fform_005f0.setPageContext(_jspx_page_context);
      _jspx_th_form_005fform_005f0.setParent(null);
      // /WEB-INF/jsp/login/login.jsp(134,3) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f0.setMethod("post");
      // /WEB-INF/jsp/login/login.jsp(134,3) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f0.setName("loginForm");
      // /WEB-INF/jsp/login/login.jsp(134,3) name = onsubmit type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f0.setOnsubmit("return checkForm()");
      int[] _jspx_push_body_count_form_005fform_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_form_005fform_005f0 = _jspx_th_form_005fform_005f0.doStartTag();
        if (_jspx_eval_form_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				<table style=\"width: 40%\">\r\n");
            out.write("					<tr>\r\n");
            out.write("						<th>ID</th>\r\n");
            out.write("						<td><input type=\"text\" name=\"id\" id=\"id\"></td>\r\n");
            out.write("					</tr>\r\n");
            out.write("					<tr>\r\n");
            out.write("						<th>PW</th>\r\n");
            out.write("						<td><input type=\"password\" name=\"password\"></td>\r\n");
            out.write("					</tr>\r\n");
            out.write("					<tr>\r\n");
            out.write("						<td colspan=\"2\">\r\n");
            out.write("							<input type=\"checkbox\" name=\"rememberId\" id=\"rememberId\" value=\"\"> 아이디저장\r\n");
            out.write("						</td>\r\n");
            out.write("					</tr>\r\n");
            out.write("				</table>\r\n");
            out.write("				<br>\r\n");
            out.write("				<input type=\"submit\" value=\"로그인\">\r\n");
            out.write("			");
            int evalDoAfterBody = _jspx_th_form_005fform_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_form_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005fform_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005fform_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005fform_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005fform_0026_005fonsubmit_005fname_005fmethod.reuse(_jspx_th_form_005fform_005f0);
      _jspx_th_form_005fform_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_form_005fform_005f0_reused);
    }
    return false;
  }
}
